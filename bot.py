from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import asyncio

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_TOKEN = '7814963909:AAGoxBu9pkVmyAwyw41x7Nyy0n9ww9QTvoU'
CHANNEL_ID = '-1001324681912'  # –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ, —Ä–∞–±–æ—Ç–∞–µ—Ç
CHANNEL_LINK = 'https://t.me/lebedevamariiatgm'  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ–π –∫–∞–Ω–∞–ª

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def cmd_start(message: Message):
    print(f"START: –ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç {message.from_user.id}")
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üì¢", url=CHANNEL_LINK)],
        [InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É ‚úÖ", callback_data="check_subscription")]
    ])
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ì–∏–≥—Ç–µ—Å—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è check_subscription
@dp.callback_query(lambda c: c.data == "check_subscription")
async def process_subscription(callback: CallbackQuery):
    user_id = callback.from_user.id
    print(f"CHECK_SUB: Callback –æ—Ç {user_id}: {callback.data}")
    try:
        print(f"CHECK_SUB: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –¥–ª—è user_id={user_id} –≤ –∫–∞–Ω–∞–ª–µ {CHANNEL_ID}")
        member = await bot.get_chat_member(CHANNEL_ID, user_id)
        print(f"CHECK_SUB: –°—Ç–∞—Ç—É—Å: {member.status}")
        if member.status in ["member", "administrator", "creator"]:
            await bot.send_message(user_id, "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É. –î–µ—Ä–∂–∏ —Ñ–∞–π–ª —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –Ω–∞ —Ç–µ—Å—Ç—ã: https://docs.google.com/document/d/1wRpzasug5kSagNZgtG2QlSRMyK-7PP3ZYvNcejoDkoo/edit?usp=sharing")
        else:
            markup = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª üì¢", url=CHANNEL_LINK)]
            ])
            await bot.send_message(user_id, "üòî –£–ø—Å. –ö–∞–∂–µ—Ç—Å—è —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª. –ü–æ–¥–ø–∏—à–∏—Å—å!", reply_markup=markup)
        await callback.answer()
    except Exception as e:
        print(f"CHECK_SUB: –û—à–∏–±–∫–∞: {type(e).__name__}: {e}")
        await bot.send_message(user_id, "üòì –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        await callback.answer("–û—à–∏–±–∫–∞")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    asyncio.run(dp.start_polling(bot))